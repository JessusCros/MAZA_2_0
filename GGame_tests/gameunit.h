#ifndef GAMEUNIT_H
#define GAMEUNIT_H

#include <QWidget>
#include <QPaintEvent>
#include <QVector>
#include <QKeyEvent>
#include <QImage>
#include <QPainter>
#include <QDebug>

using ull = unsigned long long;

static const int PONUNIT = 64;

class GameUnit : public QWidget
{
    Q_OBJECT
public:
    explicit GameUnit(QWidget *parent = nullptr);

    /* Массивчич колизий* игры
     * В колизии входят:
     * 1) Стены - (1);
     * 2) Сундуки - (2);
     * 3) Нууу и пол.. - (0);
     */
    QVector<QVector<int>> gameColMap = {
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,0,1,0,1,0,0,0,0,1,0,1,0,0,1,1,0,0,0,1,1},
        {1,1,0,1,0,1,1,1,0,0,0,0,1,0,0,0,0,0,1,0,1,1},
        {1,1,0,1,0,0,0,1,1,1,1,0,1,0,1,1,1,1,1,0,1,1},
        {1,1,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,1,0,1,0,1,0,1,0,1,0,1,0,1,1,1,0,1,1,1,1,1},
        {1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,1,0,1,1,1,0,1,0,1,1,1,0,1,0,1,1,1,1,0,1,1},
        {1,1,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
        {1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
    };


    // Массивчич идентификаторов спрайтов.
    // Он строится относительно Массивича колизий.
    QVector<QVector<int>> gameMap = {
        {15,39,23,39,23,39,39,39,39,23,39,23,39,39,19,15,39,39,39,19},
        {35,52,43,50,43,53,50,50,52,9 ,50,43,52,50,05,03,52,50,52,27},
        {35,00,43,00,6 ,44,02,00,00,53,00,43,00,00,53,52,00,7 ,00,27},
        {35,00,43,00,50,53,6 ,44,44,10,00,9 ,00,8 ,44,44,44,4 ,00,27},
        {35,00,43,00,7 ,00,52,50,53,50,00,50,00,50,53,50,50,52,00,27},
        {35,00,9 ,00,9 ,00,7 ,00,11,00,11,00,8 ,44,10,00,8 ,44,44,20},
        {35,00,50,00,52,00,43,00,50,00,52,00,50,53,50,00,52,52,53,27},
        {35,00,8 ,44,10,00,43,00,8 ,44,10,00,11,00,8 ,44,44,10,00,27},
        {35,00,53,52,50,00,43,00,53,52,50,00,53,00,50,52,50,53,00,27},
        {13,31,31,31,31,31,14,31,31,31,31,31,31,31,31,31,31,31,31,12}
    };

private:

    // Массив спрайтов.
    // Просто массив для хранениения текстурок карты.
    QImage imageWallmass[60];

    // Переменная для хранения параметра экрана.(типо не полный экран или полный, по умолчанию не полный)
    bool fullScreenPointer = true;

    // Событие обработчик значений с клавиатуры.
    void keyPressEvent(QKeyEvent *event);

    // Функция отрисовки камеры.(Насколько я понял, эта херня нужна,
    // чтобы можно было обрабатывать то что на виджете рисуется что - то)
    void paintEvent(QPaintEvent *pEvent);

    // Функция загрузки текстур в массив картинок.
    void loadTexture();

    // Функция отрисовки карты.
    void doDraw();
};

#endif // GAMEUNIT_H
